<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugDLL|Win32">
      <Configuration>DebugDLL</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLL|Win32">
      <Configuration>ReleaseDLL</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugDLL|x64">
      <Configuration>DebugDLL</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLL|x64">
      <Configuration>ReleaseDLL</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{68C9C206-414D-4A7F-BAA9-534452C3A3FC}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>intl</RootNamespace>
    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <TargetName>lib$(ProjectName)d</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <TargetName>lib$(ProjectName)d</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <TargetName>lib$(ProjectName)</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <TargetName>lib$(ProjectName)</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <TargetName>$(ProjectName)d</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <TargetName>$(ProjectName)d</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <TargetName>$(ProjectName)</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <TargetName>$(ProjectName)</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\gettext-runtime;$(OutDir)..\..\include\iconv;$(ProjectDir)..\..\include;$(OutDir)..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDataBaseFileName>
      <PreprocessorDefinitions>BUILDING_LIBINTL;IN_LIBINTL;HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_WINDOWS;WIN32;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
    </ClCompile>
    <Lib>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libiconvd.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

FOR %%H IN (libintl.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(OutDir)..\..\include\gettext\!_HEADER!" (
    DEL /f /q "$(OutDir)..\..\include\gettext\!_HEADER!"
  )
)

:: Delete directory if empty; silence if failure
RD /q "$(OutDir)..\..\include\gettext\" 2&gt;NUL

ENDLOCAL
</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF NOT EXIST "$(OutDir)..\..\include" (
  MKDIR "$(OutDir)..\..\include"
)

IF NOT EXIST "$(OutDir)..\..\include\gettext" (
  MKDIR "$(OutDir)..\..\include\gettext"
)

COPY "$(ProjectDir)libgnuintl.h" "$(OutDir)..\..\include\gettext\libintl.h" 

IF NOT EXIST "$(OutDir)..\..\licenses" (
  MKDIR "$(OutDir)..\..\licenses"
)

COPY "$(ProjectDir)..\..\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <PreprocessorDefinitions>BUILDING_LIBINTL;IN_LIBINTL;HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_WINDOWS;WIN32;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\gettext-runtime;$(OutDir)..\..\include\iconv;$(ProjectDir)..\..\include;$(OutDir)..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDataBaseFileName>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
    </ClCompile>
    <Lib>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libiconvd.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

FOR %%H IN (libintl.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(OutDir)..\..\include\gettext\!_HEADER!" (
    DEL /f /q "$(OutDir)..\..\include\gettext\!_HEADER!"
  )
)

:: Delete directory if empty; silence if failure
RD /q "$(OutDir)..\..\include\gettext\" 2&gt;NUL

ENDLOCAL
</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF NOT EXIST "$(OutDir)..\..\include" (
  MKDIR "$(OutDir)..\..\include"
)

IF NOT EXIST "$(OutDir)..\..\include\gettext" (
  MKDIR "$(OutDir)..\..\include\gettext"
)

COPY "$(ProjectDir)libgnuintl.h" "$(OutDir)..\..\include\gettext\libintl.h" 

IF NOT EXIST "$(OutDir)..\..\licenses" (
  MKDIR "$(OutDir)..\..\licenses"
)

COPY "$(ProjectDir)..\..\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\gettext-runtime;$(OutDir)..\..\include\iconv;$(ProjectDir)..\..\include;$(OutDir)..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDataBaseFileName>
      <PreprocessorDefinitions>BUILDING_LIBINTL;IN_LIBINTL;HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_WINDOWS;WIN32;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
    </ClCompile>
    <Lib>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libiconv.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

FOR %%H IN (libintl.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(OutDir)..\..\include\gettext\!_HEADER!" (
    DEL /f /q "$(OutDir)..\..\include\gettext\!_HEADER!"
  )
)

:: Delete directory if empty; silence if failure
RD /q "$(OutDir)..\..\include\gettext\" 2&gt;NUL

ENDLOCAL
</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF NOT EXIST "$(OutDir)..\..\include" (
  MKDIR "$(OutDir)..\..\include"
)

IF NOT EXIST "$(OutDir)..\..\include\gettext" (
  MKDIR "$(OutDir)..\..\include\gettext"
)

COPY "$(ProjectDir)libgnuintl.h" "$(OutDir)..\..\include\gettext\libintl.h" 

IF NOT EXIST "$(OutDir)..\..\licenses" (
  MKDIR "$(OutDir)..\..\licenses"
)

COPY "$(ProjectDir)..\..\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\gettext-runtime;$(OutDir)..\..\include\iconv;$(ProjectDir)..\..\include;$(OutDir)..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDataBaseFileName>
      <PreprocessorDefinitions>BUILDING_LIBINTL;IN_LIBINTL;HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_WINDOWS;WIN32;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
    </ClCompile>
    <Lib>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libiconv.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

FOR %%H IN (libintl.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(OutDir)..\..\include\gettext\!_HEADER!" (
    DEL /f /q "$(OutDir)..\..\include\gettext\!_HEADER!"
  )
)

:: Delete directory if empty; silence if failure
RD /q "$(OutDir)..\..\include\gettext\" 2&gt;NUL

ENDLOCAL
</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF NOT EXIST "$(OutDir)..\..\include" (
  MKDIR "$(OutDir)..\..\include"
)

IF NOT EXIST "$(OutDir)..\..\include\gettext" (
  MKDIR "$(OutDir)..\..\include\gettext"
)

COPY "$(ProjectDir)libgnuintl.h" "$(OutDir)..\..\include\gettext\libintl.h" 

IF NOT EXIST "$(OutDir)..\..\licenses" (
  MKDIR "$(OutDir)..\..\licenses"
)

COPY "$(ProjectDir)..\..\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\gettext-runtime;$(OutDir)..\..\include\iconv;$(ProjectDir)..\..\include;$(OutDir)..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <PreprocessorDefinitions>BUILDING_LIBINTL;BUILDING_DLL;IN_LIBINTL;ENABLE_RELOCATABLE=1;IN_LIBRARY;HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_DEBUG;_WINDOWS;_USRDLL;WIN32;DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>DebugFastLink</GenerateDebugInformation>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)$(TargetName).pgd</ProfileGuidedDatabase>
      <ProgramDatabaseFile>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDatabaseFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>iconvd.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <LargeAddressAware>true</LargeAddressAware>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
    </Link>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

FOR %%H IN (libintl.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(OutDir)..\..\include\gettext\!_HEADER!" (
    DEL /f /q "$(OutDir)..\..\include\gettext\!_HEADER!"
  )
)

:: Delete directory if empty; silence if failure
RD /q "$(OutDir)..\..\include\gettext\" 2&gt;NUL

ENDLOCAL
</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF NOT EXIST "$(OutDir)..\..\include" (
  MKDIR "$(OutDir)..\..\include"
)

IF NOT EXIST "$(OutDir)..\..\include\gettext" (
  MKDIR "$(OutDir)..\..\include\gettext"
)

COPY "$(ProjectDir)libgnuintl.h" "$(OutDir)..\..\include\gettext\libintl.h" 

IF NOT EXIST "$(OutDir)..\..\licenses" (
  MKDIR "$(OutDir)..\..\licenses"
)

COPY "$(ProjectDir)..\..\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\gettext-runtime;$(OutDir)..\..\include\iconv;$(ProjectDir)..\..\include;$(OutDir)..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <PreprocessorDefinitions>BUILDING_LIBINTL;BUILDING_DLL;IN_LIBINTL;ENABLE_RELOCATABLE=1;IN_LIBRARY;HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_DEBUG;_WINDOWS;_USRDLL;WIN32;DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>DebugFastLink</GenerateDebugInformation>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)$(TargetName).pgd</ProfileGuidedDatabase>
      <ProgramDatabaseFile>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDatabaseFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>iconvd.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
    </Link>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

FOR %%H IN (libintl.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(OutDir)..\..\include\gettext\!_HEADER!" (
    DEL /f /q "$(OutDir)..\..\include\gettext\!_HEADER!"
  )
)

:: Delete directory if empty; silence if failure
RD /q "$(OutDir)..\..\include\gettext\" 2&gt;NUL

ENDLOCAL
</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF NOT EXIST "$(OutDir)..\..\include" (
  MKDIR "$(OutDir)..\..\include"
)

IF NOT EXIST "$(OutDir)..\..\include\gettext" (
  MKDIR "$(OutDir)..\..\include\gettext"
)

COPY "$(ProjectDir)libgnuintl.h" "$(OutDir)..\..\include\gettext\libintl.h" 

IF NOT EXIST "$(OutDir)..\..\licenses" (
  MKDIR "$(OutDir)..\..\licenses"
)

COPY "$(ProjectDir)..\..\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\gettext-runtime;$(OutDir)..\..\include\iconv;$(ProjectDir)..\..\include;$(OutDir)..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <PreprocessorDefinitions>BUILDING_LIBINTL;BUILDING_DLL;IN_LIBINTL;ENABLE_RELOCATABLE=1;IN_LIBRARY;HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;WIN32;NDEBUG;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>DebugFastLink</GenerateDebugInformation>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)$(TargetName).pgd</ProfileGuidedDatabase>
      <ProgramDatabaseFile>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDatabaseFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>iconv.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <LargeAddressAware>true</LargeAddressAware>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
    </Link>
    <PreBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

FOR %%H IN (libintl.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(OutDir)..\..\include\gettext\!_HEADER!" (
    DEL /f /q "$(OutDir)..\..\include\gettext\!_HEADER!"
  )
)

:: Delete directory if empty; silence if failure
RD /q "$(OutDir)..\..\include\gettext\" 2&gt;NUL

ENDLOCAL
</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF NOT EXIST "$(OutDir)..\..\include" (
  MKDIR "$(OutDir)..\..\include"
)

IF NOT EXIST "$(OutDir)..\..\include\gettext" (
  MKDIR "$(OutDir)..\..\include\gettext"
)

COPY "$(ProjectDir)libgnuintl.h" "$(OutDir)..\..\include\gettext\libintl.h" 

IF NOT EXIST "$(OutDir)..\..\licenses" (
  MKDIR "$(OutDir)..\..\licenses"
)

COPY "$(ProjectDir)..\..\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
</Command>
    </PostBuildEvent>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\..\gettext-runtime;$(OutDir)..\..\include\iconv;$(ProjectDir)..\..\include;$(OutDir)..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <PreprocessorDefinitions>BUILDING_LIBINTL;BUILDING_DLL;IN_LIBINTL;ENABLE_RELOCATABLE=1;IN_LIBRARY;HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;NDEBUG;_WINDOWS;_USRDLL;WIN32;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>DebugFastLink</GenerateDebugInformation>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)$(TargetName).pgd</ProfileGuidedDatabase>
      <ProgramDatabaseFile>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDatabaseFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>iconv.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
    </Link>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF EXIST "$(OutDir)..\..\licenses\$(ProjectName).txt" (
  DEL "$(OutDir)..\..\licenses\$(ProjectName).txt"
)

FOR %%H IN (libintl.h) DO (
  SET "_HEADER=%%H"
  IF EXIST "$(OutDir)..\..\include\gettext\!_HEADER!" (
    DEL /f /q "$(OutDir)..\..\include\gettext\!_HEADER!"
  )
)

:: Delete directory if empty; silence if failure
RD /q "$(OutDir)..\..\include\gettext\" 2&gt;NUL

ENDLOCAL
</Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
ECHO OFF
SETLOCAL EnableDelayedExpansion EnableExtensions

IF NOT EXIST "$(OutDir)..\..\include" (
  MKDIR "$(OutDir)..\..\include"
)

IF NOT EXIST "$(OutDir)..\..\include\gettext" (
  MKDIR "$(OutDir)..\..\include\gettext"
)

COPY "$(ProjectDir)libgnuintl.h" "$(OutDir)..\..\include\gettext\libintl.h" 

IF NOT EXIST "$(OutDir)..\..\licenses" (
  MKDIR "$(OutDir)..\..\licenses"
)

COPY "$(ProjectDir)..\..\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt" 

ENDLOCAL
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="..\..\gettext-runtime\intl\bindtextdom.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\dcgettext.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\dcigettext.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\dcngettext.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\dgettext.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\dngettext.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\explodename.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\finddomain.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\gettext.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\hash-string.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\intl-compat.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\l10nflist.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\langprefs.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\loadmsgcat.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\localcharset.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\localealias.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\localename.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\lock.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\log.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\ngettext.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\osdep.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\plural-exp.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\plural.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\printf.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\relocatable.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\setlocale.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\textdomain.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\version.c" />
    <ClCompile Include="..\..\gettext-runtime\intl\xsize.c" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="config.h" />
    <ClInclude Include="libgnuintl.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>